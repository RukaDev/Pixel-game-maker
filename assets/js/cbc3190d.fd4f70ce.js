"use strict";(self.webpackChunkpixelone=self.webpackChunkpixelone||[]).push([[488],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,y=u["".concat(l,".").concat(d)]||u[d]||m[d]||s;return n?r.createElement(y,o(o({ref:t},p),{},{components:n})):r.createElement(y,o({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:4},o="Game",i={unversionedId:"Overview",id:"Overview",title:"Game",description:"Core Functions",source:"@site/docs/Overview.md",sourceDirName:".",slug:"/Overview",permalink:"/Pixel-game-maker/docs/Overview",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Overview.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/Pixel-game-maker/docs/configuration"}},l={},c=[{value:"Core Functions",id:"core-functions",level:2},{value:"Setup",id:"setup",level:3},{value:"Start",id:"start",level:3},{value:"End",id:"end",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"game"},"Game"),(0,a.kt)("h2",{id:"core-functions"},"Core Functions"),(0,a.kt)("p",null,"Each game contains three core functions"),(0,a.kt)("h3",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Used to setup all the assets, images, and other info used in the game. Images is passed as a paramter and represents the pre-loaded images set in the pre-game file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/js/scripts/home.js"',title:'"src/js/scripts/home.js"'},"setupGame(images) {\n    new Level(\n        images.background,\n        images.foreground,\n        {x: -15, y: -1600}\n    )\n\n    // Zones\n    var boundaryZone = new Zone(boundaryData)\n    var crystalZone = new Zone(crystalData)\n\n    // Player\n    var player = new Player({\n        boundaryZones: [boundaryZone],\n        playerImage: images.player\n    })\n\n    // Crystal\n    var crystal = new Crystal({\n        image: images.crystal,\n        positionZone: crystalZone,\n        frame: {xmax: 3, ymax: 1},\n        velocity: 40,\n        scale: 2\n    })\n\n    startGame(player, crystal)\n}\n")),(0,a.kt)("h3",{id:"start"},"Start"),(0,a.kt)("p",null,"This is where the core game logic is. It controls how the game functions, and all the assets created in the setup are passed as the parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/js/scripts/home.js"',title:'"src/js/scripts/home.js"'},"startGame(player, crystal) {\n    const canvas = Canvas.getInstance()\n    const input = Input.getInstance()\n\n    // Core loop\n    function step() {\n        const animId = window.requestAnimationFrame(step)\n\n        // Crystal\n        if (crystal.reached(player.playerSprite)) {\n            if (crystal.isLast()) {\n                endGame(animId)\n            } else {\n                crystal.nextPosition()\n            }\n        }\n\n        // Movement\n        if (input.isPressed(['w', 'a', 's', 'd'])) {\n            var {x, y} = player.calculatePosition(input.lastKey)\n            if (player.canMove(x, y)) {\n                player.animate(input.lastKey)\n                canvas.moveElements(x, y)\n            }\n        } else {\n            player.stop()\n        }\n\n        canvas.drawElements()\n    }\n}\n")),(0,a.kt)("h3",{id:"end"},"End"),(0,a.kt)("p",null,"This function is called within the startGame() function whenever the user determines the game is complete. It will return back to the world map while playing a fade out effect on the canvas and setting any additional data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/js/scripts/home.js"',title:'"src/js/scripts/home.js"'},"endGame(animId) {\n    window.cancelAnimationFrame(animId)\n    fadeOut('home')\n}\n")))}u.isMDXComponent=!0}}]);