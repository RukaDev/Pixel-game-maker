"use strict";(self.webpackChunkpixelone=self.webpackChunkpixelone||[]).push([[60],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(y,i(i({ref:n},c),{},{components:t})):r.createElement(y,i({ref:n},c))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2},i="Zone",l={unversionedId:"Classes/zone",id:"Classes/zone",title:"Zone",description:"Methods",source:"@site/docs-api/Classes/zone.md",sourceDirName:"Classes",slug:"/Classes/zone",permalink:"/elixir2d/docs-api/Classes/zone",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Trap",permalink:"/elixir2d/docs-api/Classes/trap"},next:{title:"Bridge",permalink:"/elixir2d/docs-api/Classes/bridge"}},s={},p=[{value:"Methods",id:"methods",level:2},{value:"<code>removeBoundary</code>",id:"removeboundary",level:3},{value:"<code>mapPosition</code>",id:"mapposition",level:3},{value:"<code>assignBoundaries</code>",id:"assignboundaries",level:3},{value:"<code>draw</code>",id:"draw",level:3},{value:"<code>cleanup</code>",id:"cleanup",level:3},{value:"<code>proximity</code>",id:"proximity",level:3},{value:"<code>collision</code>",id:"collision",level:3},{value:"<code>proximitySort</code>",id:"proximitysort",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>zoneData</code>",id:"zonedata",level:3}],c={toc:p};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zone"},"Zone"),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"removeboundary"},(0,o.kt)("inlineCode",{parentName:"h3"},"removeBoundary")),(0,o.kt)("p",null,"Removes a boundary instance from the zone."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:removeBoundary(i: number) -> none\n")),(0,o.kt)("h3",{id:"mapposition"},(0,o.kt)("inlineCode",{parentName:"h3"},"mapPosition")),(0,o.kt)("p",null,"Maps each element to a boundary within the zone."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:mapPosition(elements: array, position: object) -> Map\n")),(0,o.kt)("h3",{id:"assignboundaries"},(0,o.kt)("inlineCode",{parentName:"h3"},"assignBoundaries")),(0,o.kt)("p",null,"Assigns each element a boundary in the zone."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:assignBoundaries(elements: array, position: object, offset: object) -> none\n")),(0,o.kt)("h3",{id:"draw"},(0,o.kt)("inlineCode",{parentName:"h3"},"draw")),(0,o.kt)("p",null,"Draws all the boundaries on the canvas."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:draw() -> none\n")),(0,o.kt)("h3",{id:"cleanup"},(0,o.kt)("inlineCode",{parentName:"h3"},"cleanup")),(0,o.kt)("p",null,"Removes all references of the instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:cleanup() -> none\n")),(0,o.kt)("h3",{id:"proximity"},(0,o.kt)("inlineCode",{parentName:"h3"},"proximity")),(0,o.kt)("p",null,"Returns true if p1 is within amnt of the instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:proximity(p1: object, amnt: number) -> boolean\n")),(0,o.kt)("h3",{id:"collision"},(0,o.kt)("inlineCode",{parentName:"h3"},"collision")),(0,o.kt)("p",null,"Returns true if the sprite collides with a boundary."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:collision(sprite: sprite instance, x: number, y: number) -> boolean\n")),(0,o.kt)("h3",{id:"proximitysort"},(0,o.kt)("inlineCode",{parentName:"h3"},"proximitySort")),(0,o.kt)("p",null,"Sorts the boundaries by proximity."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"zone:proximitySort(sprite: sprite instance) -> none\n")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"zonedata"},(0,o.kt)("inlineCode",{parentName:"h3"},"zoneData")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"array"))),(0,o.kt)("p",null,"The boundary data to create a zone from."))}d.isMDXComponent=!0}}]);