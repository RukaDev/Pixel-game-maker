"use strict";(self.webpackChunkpixelone=self.webpackChunkpixelone||[]).push([[372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,v=m["".concat(c,".").concat(d)]||m[d]||u[d]||l;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5525:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:2},o="Enemy",i={unversionedId:"Classes/enemy",id:"Classes/enemy",title:"Enemy",description:"Static",source:"@site/docs-api/Classes/enemy.md",sourceDirName:"Classes",slug:"/Classes/enemy",permalink:"/elixir2d/docs-api/Classes/enemy",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Boundary",permalink:"/elixir2d/docs-api/Classes/boundary"},next:{title:"Lever",permalink:"/elixir2d/docs-api/Classes/lever"}},c={},s=[{value:"Static",id:"static",level:2},{value:"<code>moveAll</code>",id:"moveall",level:3},{value:"<code>removeAll</code>",id:"removeall",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>moveVertical</code>",id:"movevertical",level:3},{value:"<code>moveHorizontal</code>",id:"movehorizontal",level:3},{value:"<code>cleanup</code>",id:"cleanup",level:3},{value:"<code>move</code>",id:"move",level:3},{value:"<code>canMove</code>",id:"canmove",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>sprite</code>",id:"sprite",level:3}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"enemy"},"Enemy"),(0,a.kt)("h2",{id:"static"},"Static"),(0,a.kt)("h3",{id:"moveall"},(0,a.kt)("inlineCode",{parentName:"h3"},"moveAll")),(0,a.kt)("p",null,"Move all the enemies if canMove() returns true."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"Enemy.moveAll(enemies: array) -> none\n")),(0,a.kt)("h3",{id:"removeall"},(0,a.kt)("inlineCode",{parentName:"h3"},"removeAll")),(0,a.kt)("p",null,"Removes all the enemies in the given array."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"Enemy.removeAll(enemies: array) -> none\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"movevertical"},(0,a.kt)("inlineCode",{parentName:"h3"},"moveVertical")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"enemy:moveVertical() -> none\n")),(0,a.kt)("p",null,"Moves the instance vertically."),(0,a.kt)("h3",{id:"movehorizontal"},(0,a.kt)("inlineCode",{parentName:"h3"},"moveHorizontal")),(0,a.kt)("p",null,"Moves the instance horizontally."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"enemy.moveHorizontal() -> none\n")),(0,a.kt)("h3",{id:"cleanup"},(0,a.kt)("inlineCode",{parentName:"h3"},"cleanup")),(0,a.kt)("p",null,"Removes all references of the instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"enemy:cleanup() -> none\n")),(0,a.kt)("h3",{id:"move"},(0,a.kt)("inlineCode",{parentName:"h3"},"move")),(0,a.kt)("p",null,"Moves the enemy according to movex and movey."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"enemy:move() -> none\n")),(0,a.kt)("h3",{id:"canmove"},(0,a.kt)("inlineCode",{parentName:"h3"},"canMove")),(0,a.kt)("p",null,"Returns true if the enemy can move."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"enemy:canMove() -> boolean\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"sprite"},(0,a.kt)("inlineCode",{parentName:"h3"},"sprite")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: sprite instance")),(0,a.kt)("p",null,"Sprite to represent the enemy."))}m.isMDXComponent=!0}}]);