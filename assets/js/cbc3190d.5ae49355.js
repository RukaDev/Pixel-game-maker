"use strict";(self.webpackChunkpixelone=self.webpackChunkpixelone||[]).push([[488],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(f,s(s({ref:n},p),{},{components:t})):r.createElement(f,s({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5418:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:4},s="Game",o={unversionedId:"Overview",id:"Overview",title:"Game",description:"Core Functions",source:"@site/docs/Overview.md",sourceDirName:".",slug:"/Overview",permalink:"/elixir2d/docs/Overview",draft:!1,editUrl:"https://github.com/rukadev/elixir2d/docs/Overview.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/elixir2d/docs/configuration"}},l={},c=[{value:"Core Functions",id:"core-functions",level:2},{value:"Setup",id:"setup",level:3},{value:"Start",id:"start",level:3},{value:"End",id:"end",level:3}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"game"},"Game"),(0,a.kt)("h2",{id:"core-functions"},"Core Functions"),(0,a.kt)("p",null,"Each game contains three core functions"),(0,a.kt)("h3",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Used to setup all the assets, images, and other info used in the game. Images is passed as a paramter and represents the pre-loaded images set in the pre-game file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/js/scripts/home.js"',title:'"src/js/scripts/home.js"'},"setupGame(images) {\n    // Effect\n    fade.in(4)\n\n    // Technical\n    canvas.create(1080, 1920)\n    input.register('w')\n    fps.set(75)\n\n    // Sprites\n    var offset = {x: -25, y: -1600}\n\n    var backgroundSprite = new Sprite({\n        position: {\n            x: offset.x,\n            y: offset.y\n        },\n        image: images.background,\n        moveable: true\n    })\n\n    var playerSprite = new Sprite({\n        position: {\n            x: (canvas.instance.width / 2 - images.player.width / 8),\n            y: (canvas.instance.height / 2 - imsages.player.height / 2)\n        },\n        image: images.player,\n        frames: {xmax: 3, ymax: 4},\n        scale: 3.5\n    })\n\n    var foregroundSprite = new Sprite({\n        position: {\n            x: offset.x,\n            y: offset.y\n        },\n        moveable: true,\n        image: images.foreground\n    })\n\n    var crystalSprite = new Sprite({\n        image: images.crystal,\n        frames: {xmax: 3, ymax: 1},\n        velocity: 40,\n        scale: 2,\n        moveable: true\n    })\n\n    // Level\n    level.create(backgroundSprite, foregroundSprite, offset)\n\n    // Zones\n    var boundaryZone = new Zone(boundaryData)\n    var crystalZone = new Zone(crystalData)\n\n    // Player\n    var player = new Player({\n        playerSprite: playerSprite,\n        boundaryZones: [boundaryZone],\n    })\n\n    // Crystal\n    var crystal = new Crystal({\n        sprite: crystalSprite,\n        positionZone: crystalZone,\n    })\n\n    startGame(player, crystal)\n}\n")),(0,a.kt)("h3",{id:"start"},"Start"),(0,a.kt)("p",null,"This is where the core game logic is. It controls how the game functions, and all the assets created in the setup are passed as the parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/js/scripts/home.js"',title:'"src/js/scripts/home.js"'},"startGame(player, crystal) {\n\n    // Core loop\n    function step() {\n        const animId = window.requestAnimationFrame(step)\n\n        if (fps.advance()) {\n            // Crystal\n            if (crystal.reached(player.playerSprite)) {\n                if (crystal.isLast()) {\n                    endGame(animId)\n                } else {\n                    crystal.nextPosition()\n                }\n            }\n\n            // Movement\n            if (input.isPressed(['w', 'a', 's', 'd'])) {\n                var {x, y} = player.calculatePosition(input.lastKey)\n                if (player.canMove(x, y)) {\n                    player.animate(input.lastKey)\n                    canvas.moveElements(x, y)\n                }\n            } else {\n                player.stop()\n            }\n\n            // Draw\n            canvas.drawElements()\n        }\n    }\n\n    step()\n}\n")),(0,a.kt)("h3",{id:"end"},"End"),(0,a.kt)("p",null,"This function is called within the startGame() function whenever the user determines the game is complete. It will return back to the world map while playing a fade out effect on the canvas and setting any additional data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/js/scripts/home.js"',title:'"src/js/scripts/home.js"'},"endGame(animId) {\n    window.cancelAnimationFrame(animId)\n    fade.out(1.5, function() {\n        history.back()\n    })\n}\n")))}u.isMDXComponent=!0}}]);