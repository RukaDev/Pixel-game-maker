"use strict";(self.webpackChunkpixelone=self.webpackChunkpixelone||[]).push([[269],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>v});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),y=r,v=u["".concat(o,".").concat(y)]||u[y]||d[y]||l;return a?n.createElement(v,i(i({ref:t},p),{},{components:a})):n.createElement(v,i({ref:t},p))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=y;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},8291:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:1},i=void 0,s={unversionedId:"Classes/Crystal",id:"Classes/Crystal",title:"Crystal",description:"Static",source:"@site/docs-api/Classes/Crystal.md",sourceDirName:"Classes",slug:"/Classes/Crystal",permalink:"/Pixel-game-maker/docs-api/Classes/Crystal",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Guide",permalink:"/Pixel-game-maker/docs-api/intro"},next:{title:"Boundary",permalink:"/Pixel-game-maker/docs-api/Classes/Boundary"}},o={},c=[{value:"<code>Static</code>",id:"static",level:2},{value:"getAllCrystals()",id:"getallcrystals",level:3},{value:"canActivateAll()",id:"canactivateall",level:3},{value:"<code>Methods</code>",id:"methods",level:2},{value:"cleanup()",id:"cleanup",level:3},{value:"isLast()",id:"islast",level:3},{value:"activate()",id:"activate",level:3},{value:"<code>Properties</code>",id:"properties",level:2},{value:"sprite",id:"sprite",level:3},{value:"positionZone",id:"positionzone",level:3},{value:"boundary",id:"boundary",level:3},{value:"position",id:"position",level:3}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"static"},(0,r.kt)("inlineCode",{parentName:"h2"},"Static")),(0,r.kt)("h3",{id:"getallcrystals"},"getAllCrystals()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Crystal.getAllCrystals() -> array\n")),(0,r.kt)("p",null,"Returns all active crystals"),(0,r.kt)("h3",{id:"canactivateall"},"canActivateAll()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Lever.canActivateAll(levers: table) -> none\n")),(0,r.kt)("p",null,"Checks if each lever can be activated, and if so will activate them."),(0,r.kt)("h2",{id:"methods"},(0,r.kt)("inlineCode",{parentName:"h2"},"Methods")),(0,r.kt)("h3",{id:"cleanup"},"cleanup()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"crystal:cleanup() -> null\n")),(0,r.kt)("p",null,"Cleans up the crystal instance"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"islast"},"isLast()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"crystal:isLast() -> boolean\n")),(0,r.kt)("p",null,"Returns true if instance is the last crystal left."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"activate"},"activate()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"lever:activate() -> null\n")),(0,r.kt)("p",null,"Plays an animation and calls the callback property if given."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"properties"},(0,r.kt)("inlineCode",{parentName:"h2"},"Properties")),(0,r.kt)("h3",{id:"sprite"},"sprite"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Type: sprite instance\nDef:  Sprite to represent the crystal\n")),(0,r.kt)("h3",{id:"positionzone"},"positionZone"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Type: zone instance\nDef:  The set of positions a crystal takes in order\n")),(0,r.kt)("h3",{id:"boundary"},"boundary"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Type: boundary instance\nDef:  The crystal's hitbox\n")),(0,r.kt)("h3",{id:"position"},"position"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Type: table\nDef:  Position of the sprite on the canvas\n")))}u.isMDXComponent=!0}}]);